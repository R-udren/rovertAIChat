services:
  postgres:
    image: postgres:17-alpine
    container_name: postgresql
    restart: always
    network_mode: host
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      start_period: 0s
      interval: 1s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: rovertchat-api
    restart: always
    network_mode: host
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://postgres:${DATABASE_PASSWORD}@localhost:5432/postgres
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      OLLAMA_API_BASE_URL: http://localhost:11434
      DOMAIN: ${DOMAIN}
      FRONTEND_ORIGINS: ${FRONTEND_ORIGINS}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_REFRESH_SECRET_KEY: ${JWT_REFRESH_SECRET_KEY}

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: rovertchat-frontend
    restart: always
    network_mode: host
    depends_on:
      - backend
    environment:
      VITE_API_BASE_URL: ${VITE_API_BASE_URL}

  caddy:
    image: caddy:2-alpine
    container_name: rovertchat-caddy
    restart: always
    network_mode: host
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
      - caddy_logs:/var/log/caddy
    depends_on:
      - frontend
      - backend
    environment:
      DOMAIN: ${DOMAIN}

volumes:
  postgres_data:
  caddy_data:
  caddy_config:
  caddy_logs:
