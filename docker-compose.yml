services:
  postgres:
    image: postgres:17-alpine
    container_name: postgresql
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 5s
      retries: 5
    networks:
      - rovertchat-net

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - rovertchat-net

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: rovertchat-api
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://postgres:${DATABASE_PASSWORD}@postgres:5432/postgres
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      OLLAMA_API_BASE_URL: http://host.docker.internal:11434 # If ollama is running on the host machine
      DOMAIN: ${DOMAIN}
      FRONTEND_ORIGINS: ${FRONTEND_ORIGINS}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_REFRESH_SECRET_KEY: ${JWT_REFRESH_SECRET_KEY}
    extra_hosts:
      - "host.docker.internal:host-gateway" # For accessing host services (for ollama)
    networks:
      - rovertchat-net
  frontend:
    build:
      context: ./frontend
    container_name: rovertchat-frontend
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - rovertchat-net
    environment:
      VITE_API_BASE_URL: ${VITE_API_BASE_URL}
      DOMAIN: ${DOMAIN}

volumes:
  postgres_data:

networks:
  rovertchat-net:
